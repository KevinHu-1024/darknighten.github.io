<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: insight | Darknighten‘s Cave]]></title>
  <link href="http://darknighten.github.io/blog/categories/insight/atom.xml" rel="self"/>
  <link href="http://darknighten.github.io/"/>
  <updated>2015-04-24T23:01:04+08:00</updated>
  <id>http://darknighten.github.io/</id>
  <author>
    <name><![CDATA[H.K.]]></name>
    <email><![CDATA[hi-bai-du@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[本博客采用“Tick-Tock”规律更新]]></title>
    <link href="http://darknighten.github.io/blog/2015/04/21/tick-tock/"/>
    <updated>2015-04-21T22:37:20+08:00</updated>
    <id>http://darknighten.github.io/blog/2015/04/21/tick-tock</id>
    <content type="html"><![CDATA[<p><br /></p>

<p>第一次接触“Tick-Tock”一词是在高中烧硬件的时候，那个时候Intel对AMD谈架构效率和制程，AMD对消费者谈核心多和性价比，于是各家的软文在ZOL上满天飞。记得其中有一篇文章写到了Intel的&#8221;制程年&#8221;与&#8221;架构年&#8221;的切换即“Tick-Tock”：</p>

<blockquote><p>第一年用老架构上新制程，待新制程的坑排的差不多了，第二年换新架构新制程，年复一年，累的AMD气喘吁吁。</p></blockquote>

<p>同时，“Tick-Tock”也是单CPU实现多任务的原理，即“滴答时间片”：在“Tick”时间片内执行进程1，在“Tock”时间片执行进程2，两者之间进行上下文切换。</p>

<p>本博客的更新也采用这种方法，第一周只做开发，同时记录下遇到的问题及感悟；第二周集中整理润色积攒下来的笔记，po到博客上，下一周继续做开发。</p>

<h6>P.S. 由于近期项目收尾，经常加班，若无法及时更新，则顺延。</h6>

<p><br /></p>

<p><br />
@end</p>

<hr />

<p>您所查看的内容为本博客的 <a href="http://darknighten.github.io/blog/categories/insight/"><strong>Insight</strong></a> 分类，更多内容可以浏览其他分类：</p>

<p><a href="http://darknighten.github.io/blog/categories/note/"><strong>Note</strong></a>: <em>主要是分享一些技术笔记,标签&lt; Note ></em></p>

<p><a href="http://darknighten.github.io/blog/categories/memo"><strong>Memo</strong></a>: <em>主要记录了开发一些常用的东西，方便备查，标签&lt; Memo ></em></p>

<p><a href="http://darknighten.github.io/blog/categories/insight/"><strong>Insight</strong></a>: <em>记录了开发中一些个人感悟，标签&lt; Insight ></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从码农到工程师(1)——一个App的进化（更新中……）]]></title>
    <link href="http://darknighten.github.io/blog/2015/04/21/cong-ma-nong-dao-gong-cheng-shi-1/"/>
    <updated>2015-04-21T22:36:55+08:00</updated>
    <id>http://darknighten.github.io/blog/2015/04/21/cong-ma-nong-dao-gong-cheng-shi-1</id>
    <content type="html"><![CDATA[<p><br /></p>

<h6>PS：更新中……行文晦涩，努力改善</h6>

<p>上周由于加班断po了一周，罪过罪过，算上之前攒下来没发的数篇笔记，已经累计N篇了。这周为Tock周，开始更新笔记。</p>

<p><br /></p>

<p>从这周开始笔记中将增加一个系列笔记：《从码农到工程师》。文中将结合自己在电子、机械等方面的一些知识类比于iOS开发，目的在于，从中总结出程序员如何能开启“上帝视角”俯瞰整个工程，成为一名真正的工程师。这一点，无论哪个行业，只要是工科，道理都是相通的。</p>

<p>记得大学期间在写单片机的时候，在论坛上看过一个帖子《从电子爱好者到工程师》（没记错吧？），文中就以上的话题洋洋洒洒写了几千字，令人很是震撼。今日我将重走前辈之路，探索工程师的成长。</p>

<p><br /></p>

<p>天气预报类应用，应该算是iOS开发初学者必做的一种应用了，他的实现比较简单，实用性也较高，简单做一做就可以天天用自己的App了。但是麻雀虽小，五脏俱全，一款天气预报里至少需要如下组件：</p>

<ul>
<li>框架层面：Foundation、UIKit、CoreLocation、网络框架、解析框架、第三方库的使用</li>
<li>语言层面：面向对象特性、协议、代理、通知中心</li>
<li>架构层面：抽象、解耦、重构</li>
<li>设计层面：交互、UI</li>
<li>再复杂一点弄个异步、存储、引导界面…别看是小程序，拿来练手非常实用！</li>
</ul>


<h2>原生动物：单细胞——混杂与有效</h2>

<blockquote><p>代码混在视图控制器中，完成基本功能，验证想法正确与否</p></blockquote>

<p>balabala……</p>

<h2>植物：器官——抽象与面向对象</h2>

<blockquote><p>从上一个代码中，抽离出与网络相关的代码和与定位相关的代码，并将他们分别作为两个对象——WeatherService和LocationService，用println进行功能测试</p></blockquote>

<h2>动物：系统——设计模式与解耦</h2>

<blockquote><p>在第二阶段中，虽然我们完成了一些抽离工作，但因为涉及到对象间相互传值的需要，所以有一些相关代码混杂在视图控制器中。为了进一步降低他们之间的耦合程度，我们使用了设计模式，类比单片机的“中断处理”。</p>

<p>这样程序内部就变成由主视图控制器、两个器官，三者共同组成了一个系统</p></blockquote>

<p>balabala……</p>

<h2>顶点：人——灵活与严谨</h2>

<blockquote><p>App做到这里，已经实现了基本的业务逻辑。但是我们仍需面对的是，用户在使用中可能出现的各种意外情况，如：手机的定位服务没开，没有授权，iOS版本不同，无法定位，没有网络，内存不足，意外终止，手动终止等等。这些事件可能会导致我们的程序crash掉，所以我们要在程序中做好充分的冗余工作。</p>

<p>就像人一样，具有对意外的应激性，从而使我们的程序更加健壮。</p></blockquote>

<p>balabala……</p>

<h2>终极奥义：美女——美观与交互</h2>

<blockquote><p>至此，我们才刚刚弄好了底层…下面来弄UI</p></blockquote>

<p>balabala……</p>

<p><br />
<br />
@end</p>

<hr />

<p>您所查看的内容为本博客的 <a href="http://darknighten.github.io/blog/categories/insight/"><strong>Insight</strong></a> 分类，更多内容可以浏览其他分类：</p>

<p><a href="http://darknighten.github.io/blog/categories/note/"><strong>Note</strong></a>: <em>主要是分享一些技术笔记,标签&lt; Note ></em></p>

<p><a href="http://darknighten.github.io/blog/categories/memo"><strong>Memo</strong></a>: <em>主要记录了开发一些常用的东西，方便备查，标签&lt; Memo ></em></p>

<p><a href="http://darknighten.github.io/blog/categories/insight/"><strong>Insight</strong></a>: <em>记录了开发中一些个人感悟，标签&lt; Insight ></em></p>
]]></content>
  </entry>
  
</feed>
